name: Sync upstream (odoo/enterprise)

on:
  schedule:
    - cron: "23 2 * * *"
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'  # secrets not available on PR from forks
    env:
      ODOO_BRANCH: 19.0
      UPSTREAM_URL: https://github.com/odoo/enterprise.git
      UPSTREAM_PAT: ${{ secrets.UPSTREAM_PAT }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ env.ODOO_BRANCH }}

      - name: Validate UPSTREAM_PAT has repo access
        id: validate
        run: |
          set -euo pipefail
          if [ -z "${UPSTREAM_PAT:-}" ]; then
            echo "can_access=false" >> "$GITHUB_OUTPUT"
            echo "UPSTREAM_PAT is not set; skipping."
            exit 0
          fi
          code=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer ${UPSTREAM_PAT}" \
            https://api.github.com/repos/odoo/enterprise)
          if [ "$code" = "200" ]; then
            echo "can_access=true" >> "$GITHUB_OUTPUT"
          else
            echo "can_access=false" >> "$GITHUB_OUTPUT"
            echo "Token cannot access odoo/enterprise (HTTP $code). Skipping." >&2
          fi

      - name: Fetch upstream branch
        if: steps.validate.outputs.can_access == 'true'
        run: |
          set -euo pipefail
          git remote add upstream "${UPSTREAM_URL}" || true
          git -c http.extraheader="AUTHORIZATION: bearer ${UPSTREAM_PAT}" \
            fetch --prune upstream \
              "+refs/heads/${ODOO_BRANCH}:refs/remotes/upstream/${ODOO_BRANCH}"
          # optional: tags
          # git -c http.extraheader="AUTHORIZATION: bearer ${UPSTREAM_PAT}" \
          #   fetch --prune --tags upstream "+refs/tags/*:refs/tags/*"

      - name: Fast-forward fork branch and push
        if: steps.validate.outputs.can_access == 'true'
        run: |
          set -euo pipefail
          TARGET="${ODOO_BRANCH}"   # or vendor/${ODOO_BRANCH}
          git checkout -B "${TARGET}"
          git reset --hard "refs/remotes/upstream/${ODOO_BRANCH}"
          git push origin "HEAD:refs/heads/${TARGET}"
          # optional: push tags
          # git push origin --tags
