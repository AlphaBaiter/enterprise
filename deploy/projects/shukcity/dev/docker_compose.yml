services:
  db:
    image: postgres:${POSTGRES_VERSION}
    container_name: ${TIER}-${ENV}-db
    labels:
    - tier=${TIER}
    - env=${ENV}
    - project=${PROJECT}
    - service=postgres
    - service_type=db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
      TZ: ${TZ}
    volumes:
    - pg_data:/var/lib/postgresql/data
    - ${POSTGRES_PATH}/config/${ENV}/${TIER}:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test:
      - CMD-SHELL
      - pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 3s
      retries: 30
  odoo:
    image: odoo:${ODOO_VERSION}
    container_name: ${TIER}-${ENV}-odoo
    labels:
    - tier=${TIER}
    - env=${ENV}
    - project=${PROJECT}
    - service=odoo
    - service_type=prime
    stdin_open: true
    tty: true
    depends_on:
      db:
        condition: service_healthy
      n8n:
        condition: service_started
    environment:
      TZ: ${TZ}
      PGHOST: db
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PGDATABASE: ${POSTGRES_DB}
      N8N_URL: http://n8n:5678
    volumes:
    - ${ODOO_PATH}/config/${ENV}/${TIER}/odoo.conf:/etc/odoo/odoo.conf:ro
    - ${ODOO_PATH}/addons/custom:/mnt/addons/custom
    - ${ODOO_PATH}/addons/enterprise:/mnt/addons/enterprise:ro
    - odoo_data:/var/lib/odoo
    - ${HOOKS_PATH}/odoo/${ENV}/${TIER}/post-init:/opt/hooks/post-init:ro
    command: bash -lc "odoo -c /etc/odoo/odoo.conf | awk 'BEGIN{ESC=sprintf(\"%c\",27);
      GRN=ESC \"[32m\"; YEL=ESC \"[33m\"; RED=ESC \"[31m\"; CYN=ESC \"[36m\"; BRED=ESC
      \"[1;31m\"; RST=ESC \"[0m\"} {line=$0; gsub(/INFO/, GRN \"INFO\" RST, line);
      gsub(/WARNING/, YEL \"WARNING\" RST, line); gsub(/ERROR/, RED \"ERROR\" RST,
      line); gsub(/CRITICAL/, BRED \"CRITICAL\" RST, line); gsub(/DEBUG/, CYN \"DEBUG\"
      RST, line); print line}'"
    networks:
    - default
    - external
  pgadmin:
    image: dpage/pgadmin4:${PGADMIN_VERSION}
    container_name: ${TIER}-${ENV}-pgadmin
    labels:
    - tier=${TIER}
    - env=${ENV}
    - project=${PROJECT}
    - service=pgadmin
    - service_type=db
    depends_on:
    - db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      TZ: ${TZ}
      PGPASSFILE: /pgadmin4/pgpass
    volumes:
    - ${POSTGRES_PATH}/config/${ENV}/${TIER}/pgadmin/servers.json:/pgadmin4/servers.json:ro
    - ${POSTGRES_PATH}/config/${ENV}/${TIER}/pgadmin/pgpass:/pgadmin4/pgpass:ro
    networks:
    - default
    - external
  n8n:
    image: n8nio/n8n:${N8N_VERSION}
    container_name: ${TIER}-${ENV}-n8n
    labels:
    - tier=${TIER}
    - env=${ENV}
    - project=${PROJECT}
    - service=n8n
    - service_type=toolbox
    depends_on:
      db:
        condition: service_healthy
    environment:
      TZ: ${TZ}
      N8N_OWNER_EMAIL: ${N8N_OWNER_EMAIL}
      N8N_OWNER_PASSWORD: ${N8N_OWNER_PASSWORD}
      N8N_OWNER_FIRST_NAME: ${N8N_OWNER_FIRST_NAME}
      N8N_OWNER_LAST_NAME: ${N8N_OWNER_LAST_NAME}
    volumes:
    - ${HOOKS_PATH}/n8n/${ENV}/${TIER}/post-init:/opt/hooks/post-init:ro
    - n8n_data:/home/node/.n8n
    - n8n_files:/files
    networks:
    - default
    - external
  mailhog:
    image: mailhog/mailhog:${MAILHOG_VERSION}
    container_name: ${TIER}-${ENV}-mailhog
    labels:
    - tier=${TIER}
    - env=${ENV}
    - project=${PROJECT}
    - service=mailhog
    - service_type=toolbox
    networks:
    - default
volumes:
  pg_data: null
  odoo_data: null
  n8n_data: null
  n8n_files: null
networks:
  external:
    external: true
    name: ${EXTERNAL_NETWORK}
